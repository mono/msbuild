<Project>
    <Import Project="$(MSBuildThisFileDirectory)\..\common.props" />

    <Import Project="$(MSBuildThisFileDirectory)\..\DependencyVersions.props" />
    <Import Project="$(MSBuildThisFileDirectory)\..\BundledSdks.props" />

    <PropertyGroup>
        <NuGetExtensionsPath>$(RepoRoot)\nuget-support\tasks-targets</NuGetExtensionsPath>
        <NuGetExtensionsPathToolsVersion>$(RepoRoot)\nuget-support\tv</NuGetExtensionsPathToolsVersion>

        <NuGetBuildTasksVersion>$(NuGetFrameworksPackageVersion)</NuGetBuildTasksVersion>

        <NuGetBuildTasksVersionFile>$(RepoRoot)\nuget-support\nuget.build.tasks.version</NuGetBuildTasksVersionFile>
    </PropertyGroup>

    <Target Name="FetchNuGetBuildTasks">
        <Error Condition="'$(NuGetBuildTasksVersion)' == ''" Text="Missing version for NuGet.Build.Tasks. "/>

        <Message Text="NuGetBuildTasksVersionOnDisk in UpdateNuGetBuildTasks: $(NuGetBuildTasksVersionOnDisk)" />
        <PropertyGroup>
            <TmpPackageDirectory>$(MSBuildThisFileDirectory)/tmp/packages/</TmpPackageDirectory>
        </PropertyGroup>

        <RemoveDir Directories="$(TmpPackageDirectory);$(NuGetExtensionsPath);$(NuGetExtensionsPathToolsVersion)" />

        <MakeDir Directories="$(TmpPackageDirectory);$(NuGetExtensionsPath);$(NuGetExtensionsPathToolsVersion)" />

        <Exec
            Command="nuget install -Prerelease -OutputDirectory $(TmpPackageDirectory) -Version $(NuGetBuildTasksVersion) NuGet.Build.Tasks"
            Condition="'$(SkipNuGetBuildTasksInstall)' != 'true'" />

        <Exec Command="find $(TmpPackageDirectory) -type f -iwholename '*net4[567]*' -a ! -name _._ -exec cp {} $(NuGetExtensionsPath) &quot;;&quot;" />
        <Exec Command="find $(TmpPackageDirectory) -type f -iwholename '*any/native/*.targets' -exec cp {} $(NuGetExtensionsPath) &quot;;&quot;" />

        <MakeDir Directories="$(NuGetExtensionsPathToolsVersion)/SolutionFile/ImportAfter" />
        <Exec Command="curl $(CLIBlobBaseURL)/resources/MSBuildImports/15.0/SolutionFile/ImportAfter/Microsoft.NuGet.ImportAfter.targets -o $(NuGetExtensionsPathToolsVersion)/SolutionFile/ImportAfter/Microsoft.NuGet.ImportAfter.targets" />

        <Exec Command="find $(NuGetExtensionsPath) -type f -exec chmod -x {} &quot;;&quot;" />
        <Exec Command="find $(NuGetExtensionsPathToolsVersion) -type f -exec chmod -x {} &quot;;&quot;" />

        <!-- FIXME: remove need for NuGetBuildTasksVersion -->
        <WriteLinesToFile Lines="$(NuGetBuildTasksVersion)" File="$(NuGetBuildTasksVersionFile)" Overwrite="true" />

        <!-- RemoveDir Directories="$(TmpPackageDirectory)" / -->
    </Target>

    <Target Name="UpdateNuGetBuildTasks">
        <Error Condition="'$(NuGetBuildTasksVersion)' == ''" Text="Missing version for NuGet.Build.Tasks. "/>

        <ReadLinesFromFile File="$(NuGetBuildTasksVersionFile)" Condition="Exists('$(NuGetBuildTasksVersionFile)')">
            <Output TaskParameter="Lines" PropertyName="NuGetBuildTasksVersionOnDisk" />
        </ReadLinesFromFile>

        <Message Text="** NuGetBuildTasks: new version: $(NuGetBuildTasksVersion) and on disk version: $(NuGetBuildTasksVersionOnDisk)" Importance="High" />
        <WriteLinesToFile Lines="NuGet.Build.Tasks=$(NuGetBuildTasksVersion)%3B" File="$(SdkVersionsFile)" />

        <!-- NuGet.Build.Tasks version has changed. Need to fetch the update -->
        <CallTarget Targets="FetchNuGetBuildTasks" Condition="'$(NuGetBuildTasksVersionOnDisk)' != '$(NuGetBuildTasksVersion)'" />
    </Target>
</Project>
