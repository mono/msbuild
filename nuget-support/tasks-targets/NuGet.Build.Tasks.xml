<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NuGet.Build.Tasks</name>
    </assembly>
    <members>
        <member name="M:NuGet.Build.Tasks.BuildTasksUtility.AddAllProjectsForRestore(NuGet.ProjectModel.DependencyGraphSpec)">
            <summary>
            Add all restorable projects to the restore list.
            This is the behavior for --recursive
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.GetProjectTargetFrameworksTask">
            <summary>
            Determine the project's targetframework(s) based
            on the available properties.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectPath">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworkMoniker">
            <summary>
            Optional TargetFrameworkMoniker property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformIdentifier">
            <summary>
            Optional TargetPlatformIdentifier property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformMinVersion">
            <summary>
            Optional TargetPlatformMinVersion property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetPlatformVersion">
            <summary>
            Optional TargetPlatformVersion property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFrameworks">
            <summary>
            Optional TargetFrameworks property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.TargetFramework">
            <summary>
            Optional TargetFrameworks property value.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetProjectTargetFrameworksTask.ProjectTargetFrameworks">
            <summary>
            ; delimited list of target frameworks for the project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.CurrentProjectName">
            <summary>
            The current project's name.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.CurrentProjectTargetFramework">
            <summary>
            The current project's target framework.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.FallbackTargetFrameworks">
            <summary>
            Optional list of target frameworks to be used as Fallback target frameworks.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.AnnotatedProjectReferences">
            <summary>
            The project references for property lookup.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetReferenceNearestTargetFrameworkTask.AssignedProjects">
            <summary>
            The project references with assigned properties.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.ProjectPath">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.ToolFramework">
            <summary>
            Tool runtime framework where this will be executed.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreSources">
            <summary>
            NuGet sources
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreFallbackFolders">
            <summary>
            NuGet fallback folders
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestorePackagesPath">
            <summary>
            User packages folder
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreDotnetCliToolsTask.RestoreConfigFilePaths">
            <summary>
            Config File Paths used
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreFrameworkReferencesTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreFrameworkReferencesTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreFrameworkReferencesTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageDownloadsTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageDownloadsTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageDownloadsTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageReferencesTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageReferencesTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestorePackageReferencesTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectJsonPathTask.ProjectPath">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectJsonPathTask.ProjectJsonPath">
            <summary>
            Output path to project.json if it exists.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.ProjectUniqueName">
            <summary>
            Full path to the msbuild project.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.ParentProjectPath">
            <summary>
            Root project path used for resolving the absolute path.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.TargetFrameworks">
            <summary>
            Target frameworks to apply this for. If empty this applies to all.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreProjectReferencesTask.RestoreGraphItems">
            <summary>
            Output items
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.GetRestoreSettingsTask">
            <summary>
            Get all the settings to be used for project restore.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreRootConfigDirectory">
            <summary>
            The root directory from which to talk to find the config files. Used by the CLI in Dotnet Tool install
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreSettingsPerFramework">
            <summary>
            Settings read with TargetFramework set
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestorePackagesPathOverride">
            <summary>
            Command line value of RestorePackagesPath
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreSourcesOverride">
            <summary>
            Command line value of RestoreSources
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.RestoreFallbackFoldersOverride">
            <summary>
            Command line value of RestoreFallbackFolders
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.MSBuildStartupDirectory">
            <summary>
            Original working directory
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSettingsTask.OutputSources">
            <summary>
            Output items
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.GetRestoreSettingsTask.GetPropertyValues(Microsoft.Build.Framework.ITaskItem[],System.String)">
            <summary>
            Read a metadata property from each item and split the values.
            Nulls and empty values are ignored.
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.GetRestoreSettingsTask.GetGlobalAbsolutePath(System.String)">
            <summary>
            Resolve a path against MSBuildStartupDirectory
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask">
            <summary>
            Convert .metaproj paths to project paths.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask.ProjectReferences">
            <summary>
            Solution project references.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask.SolutionFilePath">
            <summary>
            Root path used for resolving the absolute project paths.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.GetRestoreSolutionProjectsTask.OutputProjectReferences">
            <summary>
            Output items
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.RestoreSettingsUtils">
            <summary>
            This class contains the logic for the settings using during restore. 
            It contains methods with the settings precedence logic as well.
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.RestoreSettingsUtils.GetValue``1(System.Func{``0}[])">
            <summary>
            Return the value from the first function that returns non-null.
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.RestoreTask">
            <summary>
            .NET Core compatible restore task for PackageReference and UWP project.json projects.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreGraphItems">
            <summary>
            DG file entries
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreDisableParallel">
            <summary>
            Disable parallel project restores and downloads
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreNoCache">
            <summary>
            Disable the web cache
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreIgnoreFailedSources">
            <summary>
            Ignore errors from package sources
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreRecursive">
            <summary>
            Restore all projects.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreForce">
            <summary>
            Force restore, skip no op
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.HideWarningsAndErrors">
            <summary>
            Do not display Errors and Warnings to the user. 
            The Warnings and Errors are written into the assets file and will be read by an sdk target.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.Interactive">
            <summary>
            Set this property if you want to get an interactive restore
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.RestoreTask.RestoreForceEvaluate">
            <summary>
            Reevaluate resotre graph even with a lock file, skip no op as well.
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.ImportsFallbackWarning">
            <summary>
              Looks up a localized string similar to ProjectReference '{0}' was resolved using '{1}' instead of the project target framework '{2}'. This project may not be fully compatible with your project..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.NoCompatibleTargetFramework">
            <summary>
              Looks up a localized string similar to Project '{0}' targets '{2}'. It cannot be referenced by a project that targets '{1}'..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.NoProjectsProvidedToTask">
            <summary>
              Looks up a localized string similar to Unable to find a project to restore!.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.NoProjectsToRestore">
            <summary>
              Looks up a localized string similar to Nothing to do. None of the projects specified contain packages to restore..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.RestoreCanceled">
            <summary>
              Looks up a localized string similar to Restore canceled!.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.UnsupportedFallbackFramework">
            <summary>
              Looks up a localized string similar to The project fallback framework '{0}' is not a supported target framework..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.Strings.UnsupportedTargetFramework">
            <summary>
              Looks up a localized string similar to The project target framework '{0}' is not a supported target framework..
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WarnForInvalidProjectsTask.AllProjects">
            <summary>
            All known projects.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WarnForInvalidProjectsTask.ValidProjects">
            <summary>
            All valid projects for restore.
            </summary>
        </member>
        <member name="T:NuGet.Build.Tasks.WriteRestoreGraphTask">
            <summary>
            Generate dg file output.
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WriteRestoreGraphTask.RestoreGraphItems">
            <summary>
            DG file entries
            </summary>
        </member>
        <member name="P:NuGet.Build.Tasks.WriteRestoreGraphTask.RestoreRecursive">
            <summary>
            Restore all projects.
            </summary>
        </member>
        <member name="M:NuGet.Build.Tasks.WriteRestoreGraphTask.GetNullForEmpty(System.String)">
            <summary>
            Convert empty strings to null
            </summary>
        </member>
        <member name="T:NuGet.Build.MSBuildLogger">
            <summary>
            TaskLoggingHelper -&gt; ILogger
            </summary>
        </member>
        <member name="M:NuGet.Build.MSBuildLogger.LogForNonMono(NuGet.Common.INuGetLogMessage)">
            <summary>
            Log using with metadata for non mono platforms.
            </summary>
        </member>
        <member name="M:NuGet.Build.MSBuildLogger.LogForMono(NuGet.Common.ILogMessage)">
            <summary>
            Log using basic methods to avoid missing methods on mono.
            </summary>
        </member>
        <member name="T:NuGet.Build.MSBuildTaskItem">
            <summary>
            TaskItem wrapper
            </summary>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.OrderedEquals``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two enumberables for equality, ordered according to the specified key and optional comparer. Handles null values gracefully.
            </summary>
            <typeparam name="TSource">The type of the list</typeparam>
            <typeparam name="TKey">The type of the sorting key</typeparam>
            <param name="self">This list</param>
            <param name="other">The other list</param>
            <param name="keySelector">The function to extract the key from each item in the list</param>
            <param name="orderComparer">An optional comparer for comparing keys</param>
            <param name="sequenceComparer">An optional comparer for sequences</param>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.SequenceEqualWithNullCheck``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two sequence for equality, allowing either sequence to be null. If one is null, both have to be
            null for equality.
            </summary>
        </member>
        <member name="M:NuGet.Shared.EqualityUtility.SetEqualsWithNullCheck``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.ISet{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Compares two sets for equality, allowing either sequence to be null.
            If one is null, both have to be null for equality.
            </summary>
        </member>
        <member name="T:NuGet.Shared.HashCodeCombiner">
            <summary>
            Hash code creator, based on the original NuGet hash code combiner/ASP hash code combiner implementations
            </summary>
        </member>
        <member name="M:NuGet.Shared.HashCodeCombiner.GetHashCode``2(``0,``1)">
            <summary>
            Create a unique hash code for the given set of items
            </summary>
        </member>
        <member name="M:NuGet.Shared.HashCodeCombiner.GetHashCode``3(``0,``1,``2)">
            <summary>
            Create a unique hash code for the given set of items
            </summary>
        </member>
        <member name="M:NuGet.Shared.Extensions.AsList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return the enumerable as a List of T, copying if required. Optimized for common case where it is an List of T.
            Avoid mutating the return value.
            </summary>
            <remarks>https://aspnetwebstack.codeplex.com/SourceControl/latest#src/Common/CollectionExtensions.cs</remarks>
        </member>
        <member name="M:NuGet.Shared.Extensions.AsHashSet``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Return the ISet as a HashSet of T, copying if required. Optimized for common case where it is a HashSet of T.
            Avoid mutating the return value.
            </summary>
        </member>
    </members>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /><SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1" /><Reference URI=""><Transforms><Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature" /><Transform Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315" /></Transforms><DigestMethod Algorithm="http://www.w3.org/2000/09/xmldsig#sha1" /><DigestValue>ROnVk8GcTGodc//nrSGRkzh1QL4=</DigestValue></Reference></SignedInfo><SignatureValue>SQEKPVRUrRqSTEzwN62r4VOn4oylMqt85Be3rxTIzLP3xL3lJF+ZHjSegREIam3aYuUFPdosj/7ImouPb3PziIdtV5TKWRoRklM6fSyTvNN087tQFPfuo14DnVd2mfce1rNPosAncWYoUkk854Gq/ctYj1BGh9X+1P3IqxSMfyxO3MEFylvFLYxLInsp62L/MFrr+MjoIO9uRPVQgW6nygyyXgu1CzAf4irLvO5fhvg5MAs0P+cmLPlKu0GEB2AH7itrYD/oJnYC+yZdix7BiDFQv+EznkbzAd/BAzSuRwkpzyx1hbuSDvUXBA0zwQE/GlUHk18cK3ocfHdiNdlf1w==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>uscPDbgf6ehxz8GJNS8PU72SghXw/BBUFg7RBto9IU1Z4sPLCm2UsP77hVMPwtVgEC7ojc46piUC6UCYL3vqlKgO/Jjnb6wP7ntHTtOTYADjUMcgTV4IEws1bogcERHc8JNE9X7iof8O+PBgnpweIl/4pdUWlSkI8u3wBA7e6ELZWIyLPOWLapQ+1YhjPzHPqGo4ZkdZ5DzGue5apcyJUCM0cjVMDNuzo5c+KQv7OLUk/ZwI/4n5yAgaA0ELaeK7+3WZFkZwqyV0m7PL3xNWBWZR6zHv8uCrGGs8apaWuil7l6FVXWrE3fQwDfLiYxbBQ2qFnw1Fac4RgMBbpPKS5w==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509Certificate>MIIE8zCCA9ugAwIBAgITMwAAAeN9ox+ChNzkoQACAAAB4zANBgkqhkiG9w0BAQUFADB5MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpNaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTAeFw0xOTA1MDIyMTIwMzJaFw0yMDA1MDIyMTIwMzJaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpXYXNoaW5ndG9uMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xHjAcBgNVBAMTFU1pY3Jvc29mdCBDb3Jwb3JhdGlvbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALrHDw24H+nocc/BiTUvD1O9koIV8PwQVBYO0QbaPSFNWeLDywptlLD++4VTD8LVYBAu6I3OOqYlAulAmC976pSoDvyY52+sD+57R07Tk2AA41DHIE1eCBMLNW6IHBER3PCTRPV+4qH/DvjwYJ6cHiJf+KXVFpUpCPLt8AQO3uhC2ViMizzli2qUPtWIYz8xz6hqOGZHWeQ8xrnuWqXMiVAjNHI1TAzbs6OXPikL+zi1JP2cCP+J+cgIGgNBC2niu/t1mRZGcKsldJuzy98TVgVmUesx7/LgqxhrPGqWlrope5ehVV1qxN30MA3y4mMWwUNqhZ8NRWnOEYDAW6TykucCAwEAAaOCAXcwggFzMBMGA1UdJQQMMAoGCCsGAQUFBwMDMB0GA1UdDgQWBBSsQpZ1w+qoy5yTwPRr/l8fbMbkMDBQBgNVHREESTBHpEUwQzEpMCcGA1UECxMgTWljcm9zb2Z0IE9wZXJhdGlvbnMgUHVlcnRvIFJpY28xFjAUBgNVBAUTDTIyOTgwMys0NTQxMDUwHwYDVR0jBBgwFoAU23C8UjSUneuXJ6bW1Ni9qm1HCE4wYgYDVR0fBFswWTBXoFWgU4ZRaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljcm9zb2Z0JTIwQ29kZSUyMFNpZ25pbmclMjBQQ0EoMikuY3JsMGYGCCsGAQUFBwEBBFowWDBWBggrBgEFBQcwAoZKaHR0cDovL3d3dy5taWNyb3NvZnQuY29tL3BraS9jZXJ0cy9NaWNyb3NvZnQlMjBDb2RlJTIwU2lnbmluZyUyMFBDQSgyKS5jcnQwDQYJKoZIhvcNAQEFBQADggEBADnobpnS8xmUVOzSwCWfjC++PEcumOy7xqaY869jaApHTOVNEuYJ4MEnuqY5/6eYbMOnuL8Q90leZuOj97ertHIxvRJyVN3M5Z9uhFXrbt8okoQK3NqTwiBPS06+1KPOW1I1biMUgpHAkzn9bpJLhjD+DlrfoUmQF6BphA2rxdaxo5UiFrT7LS/jguKUKbjPY4SofLnAyJtKCUK023ItQ/NA0P91Hit0jxnW6XpmFSBZp1BUUpwosaIWATQ/YsibdlTHigK3Ec+Mv6W5eSPd2q6MVCOJKu7oy/hwd8aqoe6zTZPe5NIWhyaHptNWjxr2u306lqEu5HcZJ5BwAIUdmnA=</X509Certificate><X509Certificate>MIIFvDCCA6SgAwIBAgIKYQQ1RQAAAAAAPzANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMTgwOTIwMTc0MjAwWhcNMjEwNTA5MjMyODEzWjB5MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSMwIQYDVQQDExpNaWNyb3NvZnQgQ29kZSBTaWduaW5nIFBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANDTCMwSFqzT4NFGx9QeZsmnXQoRfh8U6j0WvMDnMYMb7NSF4Oy4670y/58I1cpBhPY3ne98VxKSyMrB6VoSYKoxDe6Ko2HvkiKSfFYWDjRikBZeWo4u3xtAKtA97WFE2I4Dpxw2EH9ZwmP04cDT7/F/94+FoV8rHIDCkFBfGYEGCdKQ6aC3LEQAQcZlUhc3LPnuut70BZ0slLWuY5BRscH9/jhefPXgrPb99O60KUDflHYqvRllr4xttieuwqf3sRUL5pVqgcan32aOaHd//V6tzcAJEA7wGVLJwXNRkyq2USOgSazyC9QErthQXt9PYz+1L4+sy00rcfRZKAUnTQUCAwEAAaOCAV4wggFaMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNtwvFI0lJ3rlyem1tTYvaptRwhOMAsGA1UdDwQEAwIBhjASBgkrBgEEAYI3FQEEBQIDAgACMCMGCSsGAQQBgjcVAgQWBBQ8r5ui21VwyvdpQv+ZEBuZOIjiVzAZBgkrBgEEAYI3FAIEDB4KAFMAdQBiAEMAQTAfBgNVHSMEGDAWgBQOrIJgQFYnl+UlE/wq4QpTlVnkpDBQBgNVHR8ESTBHMEWgQ6BBhj9odHRwOi8vY3JsLm1pY3Jvc29mdC5jb20vcGtpL2NybC9wcm9kdWN0cy9taWNyb3NvZnRyb290Y2VydC5jcmwwVAYIKwYBBQUHAQEESDBGMEQGCCsGAQUFBzAChjhodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vcGtpL2NlcnRzL01pY3Jvc29mdFJvb3RDZXJ0LmNydDANBgkqhkiG9w0BAQUFAAOCAgEAPXvYLuA280KYVU8PG+SfB6j28gHmkjkKraifDsoEsP4iy4V5Q4rd4use9LM1g8uF5qQtPk2iCFGXJMoYuK7U+GOHipiJ6bDSCm0uVTXALHlhxrYeTZtWJokf4L9l/8gu5DxIZcXYRPTm7TQN3qkD9GO8nLy8ZKZVvaC3kc5lftYTjPIwpaznO9HtsnXWXc+Ah6Rx3EKRztKTsN5U5fV8Idzsi7zgfuy3KQlQrQYrOtcbPYyVV4HNOJiw35o40IHukye2Fcp5BTs06N3TIshlG/JMYTyVhi4yaMspmZL1dqrfhimgDA3jtLORTJJnWlTRWSfT7khCbjFMD+5Mop5oxyNKrlTjlJUDbKWcktsoD9oGWUQQl4Dw8qiFsz0V8CrxN4ntPTfFOKcqR5tnWbQt9XqzHned6EpJKnQ3q+KSL9wQ+EMttTLc+Y0VvUxJjKeuF8GzR+i+nvkxBmTF3tL+oqW0CHVJe2Ri/AOgfrnmkWdcQRcOR+RONi3oN7gba4AUFD9SoMCpliIlHRfxOVvtmkV6jsYZv8QU6+MQk+JkiM6LgMnAfbaLbVcTWyp7b2x+i0MQzw36XY1n1IvADPPaTnrv6u+v3700EvuJtKtnbptk9YsOTKozA4iCHAdRcFUUwVx9792nVd/Dx6OMHBtGehrz1n8WRNbrY9J9CLQidRc=</X509Certificate><X509Certificate>MIIFmTCCA4GgAwIBAgIQea0WoUqgpa1Mc1j0BxMuZTANBgkqhkiG9w0BAQUFADBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwHhcNMDEwNTA5MjMxOTIyWhcNMjEwNTA5MjMyODEzWjBfMRMwEQYKCZImiZPyLGQBGRYDY29tMRkwFwYKCZImiZPyLGQBGRYJbWljcm9zb2Z0MS0wKwYDVQQDEyRNaWNyb3NvZnQgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDzXfqAZ9Rap6kMLJAg0DUIPHWEzbcHiZyJ2t7Ow2D6kWhanpRxKRh2fMLgyCV2lA5Y+gQ0Nubfr/eAuulYCyuT5Z0F43cikfc0ZDwikR1e4QmQvBT+/HVYGeF5tweSo66IWQjYnwfKA1j8aCltMtfSqMtL/OELSDJP5uu4rU/kXG8TlJnbldV126gat5SRtHdb9UgMj2p5fRRwBH1tr5D12nDYR7e/my9s5wW34RFgrHmRFHzF1qbk4X7Vw37lktI8ALU2gt554W3ztW74nzPJy1J9c5g224uha6KVl5uj3sJNJv8GlmclBsjnrOTuEjOVMZnINQhONMp5U9W1vmMyWUA2wKVOBE0921sHM+RYv+8/U2TYQlk1V/0PRXwkBE2e1jh0EZcikM5oRHSSb9VLb7CG48c2QqDQ/MHAWvmjYbkwR3GWChawkcBCle8Qfyhq4yofseTNAz93cQTHIPxJDx1FiKTXy36IrY4t7EXbxFEEySr87IaemhGXW97OU4jm4rf9rJXCKEDb7wSQ34EzOdmyRaUjhwalVYkxuwYtYA5BGH0fLrWXyxHrFdUkpZTvFRSJ/Utz+jJb/NEzAPlZYnAHMuouq0Ate8rdIWcbMJmPFqojqEHRsG4RmzbE3kB0nOFYZcFgHnpbOMiPuwQmfNQWQOW2a2yqhv0Av87BNQIDAQABo1EwTzALBgNVHQ8EBAMCAcYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUDqyCYEBWJ5flJRP8KuEKU5VZ5KQwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggIBAMURTQM6YN1dUhF3j7K7NsiyBb+0t6jYIJ1cEwO2HCL6BhM1tshj1JpHbyZX0lXxBLEmX9apUGigvNK4bszD6azfGc14rFl0rGY0NsQbPmw4TDMOMBINoyb+UVMA/69aToQNDx/kbQUuToVLjWwzb1TSZKu/UK99ejmgN+1jAw/8EwbOFjbUVDuVG1FiOuVNF9QFOZKaJ6hbqr3su77jIIlgcWxWs6UT0G0OI36VA+1oPfLYY7hrTbboMLXhypRL96KqXZkwsj2nwlFsKCABJCcrSwC3nRFrcL6yEIK8DJto0I07JIeqmShynTNfWZC99d6TnjpiWjQ54ohVHbkGsMGJay3XacMZEjaE0Mmg2v8vaXiy5Xra69cMwPe9Yxe4ORM4ojZbe/KFVmodZGLBOOKqv1FmopT1EpxmIhBr8rcwki3yKfA9OxRDaKLxnCk3y844ICVtfGfzfiQSJAMIgUfspZ6X9RjXz7vV73aW7/3O21adlaBC+ZdY4dcxItNfWeY+biIA6kOEtiXb2fMIVmjAZGsdfOy2k6JiV24u2OdYj8QxSSbd3ik1h/UwcXBbFDxpvYkSfesuo/7Yf56CWlIKK8FDK9kwiJ/IEPuJjeahhXUzfmye23MTZGJppS99ypZtn/gETTCSPW4hFCHJPeDD/YprnUr90aGdmUN3P7Da</X509Certificate></X509Data></KeyInfo><Object Id="ts-countersig"><X509Data><X509Certificate>MIIE2jCCA8KgAwIBAgITMwAAAQ1L4dQLLOpAIgAAAAABDTANBgkqhkiG9w0BAQUFADB3MQswCQYDVQQGEwJVUzETMBEGA1UECBMKV2FzaGluZ3RvbjEQMA4GA1UEBxMHUmVkbW9uZDEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMSEwHwYDVQQDExhNaWNyb3NvZnQgVGltZS1TdGFtcCBQQ0EwHhcNMTgwODIzMjAyMDM1WhcNMTkxMTIzMjAyMDM1WjCByjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdSZWRtb25kMR4wHAYDVQQKExVNaWNyb3NvZnQgQ29ycG9yYXRpb24xLTArBgNVBAsTJE1pY3Jvc29mdCBJcmVsYW5kIE9wZXJhdGlvbnMgTGltaXRlZDEmMCQGA1UECxMdVGhhbGVzIFRTUyBFU046RDA4Mi00QkZELUVFQkExJTAjBgNVBAMTHE1pY3Jvc29mdCBUaW1lLVN0YW1wIHNlcnZpY2UwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCcQyDq0hR2So06aTHLykaXopMmUOT7ilVfB6W3frYNObMvigrLEd6Vk4I7TuEKvHXapV2pMN3LiWRcrFAxM8u0HsfbtsMbKqTyfEndtzzmnpb2vQnjm8+7IZLB08P/z83oO9WEx1YSokcMGQFqGHy8JAkntVU7hsEQxI5DuTJzIF2nkP3J5qqOf/HqY2hJ+7dJMk1xCQjD+sBpfujXoaoSlXA3A0cDu5K+BtBT6PQi1+8AHejWMn0IbEwt0IeS+NlbSj3MocpRkQRxwZivZv7q79z8gKjr84IDgsANWlU5eN29WIIov1sVegCaXyw6fP5QIUCmlogY7WuQHcCMCFjxAgMBAAGjggEJMIIBBTAdBgNVHQ4EFgQUipqaigPJIkjtkN7vRo8QEJgRn0MwHwYDVR0jBBgwFoAUIzT42VJGcArtQPt2+7MrsMM1sw8wVAYDVR0fBE0wSzBJoEegRYZDaHR0cDovL2NybC5taWNyb3NvZnQuY29tL3BraS9jcmwvcHJvZHVjdHMvTWljcm9zb2Z0VGltZVN0YW1wUENBLmNybDBYBggrBgEFBQcBAQRMMEowSAYIKwYBBQUHMAKGPGh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS9wa2kvY2VydHMvTWljcm9zb2Z0VGltZVN0YW1wUENBLmNydDATBgNVHSUEDDAKBggrBgEFBQcDCDANBgkqhkiG9w0BAQUFAAOCAQEACG8XrX9JMdm3D2tNne6oynyR21BCx7B14JXNdQQfih+D58yI3pkbI3qX3lD0LAWnee11ON1vv7Ha4yl7M8xdEcxbBizb4KRxQlBPG/PlKLyhfP+ksp2Yw/orYxjZ+qAFbyLaD8+IZTHWZzO2xPj3YpfNO3IB6PjEEL4bfhqboZ0ES9K03R6LODzjkhcR/PM7nkkeAdq9lLCjWPEUXkHjCNGOySkyfgUK5GU/sCybdNv3iKzbFJhB7d8yktgY6R4+1qLpToAJvhCNtFfQdl37LUME2zF5oIGAhTLIhUHS7XVOUEeTiCZNKFOPR7xcLUgAR5F+cGTo6khgz8LXVI+ahw==</X509Certificate><X509Certificate>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</X509Certificate></X509Data><CounterSignature ts-format="cms-timestamp-message" xmlns="http://schemas.microsoft.com/xmldsig/timestamp/2003">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</CounterSignature></Object></Signature></doc>
